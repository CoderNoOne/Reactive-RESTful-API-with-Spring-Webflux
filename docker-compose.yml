version: '3.8'

services:

  mongo_master:
    image: mongo:4.4
    container_name: mongo_db
    restart: on-failure
    hostname: mongo_db
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "30001" ]
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - 30001:30001
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'rs0',members:[{_id:0,host:\"mongo_master:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    networks:
      - net

  mongo2:
    image: mongo:4.4
    hostname: mongo_db
    restart: on-failure
    container_name: mongo2
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "30002" ]
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - 30002:30002
    networks:
      - net

  mongo3:
    image: mongo:4.4
    hostname: mongo_db
    container_name: mongo3
    restart: on-failure
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "30003" ]
    volumes:
      - ./data/mongo-3:/data/db
    ports:
      - 30003:30003
    networks:
      - net

  app:
    image: codernoone/webflux_restful_api:2.0
    restart: on-failure
    depends_on:
      - mongo_master
      - mongo2
      - mongo3
    ports:
      - "8080:8080"
    networks:
      - net

networks:
  net:


