version: '3.4'

services:

  mongo_db:
    image: mongo_with_replica_rs0
    container_name: mongo_db
    hostname: mongo_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: pass
    #    command: sh -c "/usr/local/bin/setup.sh && exec docker-entrypoint.sh"
    #    entrypoint: ["/usr/bin/mongod","--bind_ip_all","--replSet","rs0"]
    #    healthcheck:
    #      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
    #      interval: 10s
    #      start_period: 30s
    command: [ "bash", "-c", "sleep 100 && mongo --eval 'rs.initiate()'" ]
    networks:
      - net2

  #  mongosetup:
  #    image: mongo:latest
  #    depends_on:
  #      - mongo_db
  #    restart: "no"
  #    networks:
  #      - net
  #    entrypoint: [ "bash", "-c", "sleep 10 && mongo --host mongo_db:27017 --eval 'rs.initiate()'" ]


  cinema-webflux-rest-api:
    image: codernoone/cinema-webflux-rest-api:latest
    depends_on:
      - mongo_db
    ports:
      - "8080:8080"
    restart: always
    networks:
      - net2

networks:
  net2: